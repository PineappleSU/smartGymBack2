<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartGym.mapper.RemarkMessageMapper">
  <resultMap id="BaseResultMap" type="cn.smartGym.pojo.RemarkMessage">
    <id column="reamrk_id" jdbcType="BIGINT" property="reamrkId" />
    <result column="user_wxid" jdbcType="VARCHAR" property="userWxid" />
    <result column="remark_message" jdbcType="VARCHAR" property="remarkMessage" />
    <result column="feedback" jdbcType="VARCHAR" property="feedback" />
    <result column="remark_process_state" jdbcType="INTEGER" property="remarkProcessState" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="manager_wxid" jdbcType="VARCHAR" property="managerWxid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reamrk_id, user_wxid, remark_message, feedback, remark_process_state, created, updated, 
    manager_wxid
  </sql>
  <select id="selectByExample" parameterType="cn.smartGym.pojo.RemarkMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from remark_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from remark_message
    where reamrk_id = #{reamrkId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from remark_message
    where reamrk_id = #{reamrkId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.smartGym.pojo.RemarkMessageExample">
    delete from remark_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.smartGym.pojo.RemarkMessage">
    insert into remark_message (reamrk_id, user_wxid, remark_message, 
      feedback, remark_process_state, created, 
      updated, manager_wxid)
    values (#{reamrkId,jdbcType=BIGINT}, #{userWxid,jdbcType=VARCHAR}, #{remarkMessage,jdbcType=VARCHAR}, 
      #{feedback,jdbcType=VARCHAR}, #{remarkProcessState,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP}, #{managerWxid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.smartGym.pojo.RemarkMessage">
    insert into remark_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reamrkId != null">
        reamrk_id,
      </if>
      <if test="userWxid != null">
        user_wxid,
      </if>
      <if test="remarkMessage != null">
        remark_message,
      </if>
      <if test="feedback != null">
        feedback,
      </if>
      <if test="remarkProcessState != null">
        remark_process_state,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="managerWxid != null">
        manager_wxid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reamrkId != null">
        #{reamrkId,jdbcType=BIGINT},
      </if>
      <if test="userWxid != null">
        #{userWxid,jdbcType=VARCHAR},
      </if>
      <if test="remarkMessage != null">
        #{remarkMessage,jdbcType=VARCHAR},
      </if>
      <if test="feedback != null">
        #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="remarkProcessState != null">
        #{remarkProcessState,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="managerWxid != null">
        #{managerWxid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.smartGym.pojo.RemarkMessageExample" resultType="java.lang.Long">
    select count(*) from remark_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update remark_message
    <set>
      <if test="record.reamrkId != null">
        reamrk_id = #{record.reamrkId,jdbcType=BIGINT},
      </if>
      <if test="record.userWxid != null">
        user_wxid = #{record.userWxid,jdbcType=VARCHAR},
      </if>
      <if test="record.remarkMessage != null">
        remark_message = #{record.remarkMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.feedback != null">
        feedback = #{record.feedback,jdbcType=VARCHAR},
      </if>
      <if test="record.remarkProcessState != null">
        remark_process_state = #{record.remarkProcessState,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.managerWxid != null">
        manager_wxid = #{record.managerWxid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update remark_message
    set reamrk_id = #{record.reamrkId,jdbcType=BIGINT},
      user_wxid = #{record.userWxid,jdbcType=VARCHAR},
      remark_message = #{record.remarkMessage,jdbcType=VARCHAR},
      feedback = #{record.feedback,jdbcType=VARCHAR},
      remark_process_state = #{record.remarkProcessState,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      manager_wxid = #{record.managerWxid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.smartGym.pojo.RemarkMessage">
    update remark_message
    <set>
      <if test="userWxid != null">
        user_wxid = #{userWxid,jdbcType=VARCHAR},
      </if>
      <if test="remarkMessage != null">
        remark_message = #{remarkMessage,jdbcType=VARCHAR},
      </if>
      <if test="feedback != null">
        feedback = #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="remarkProcessState != null">
        remark_process_state = #{remarkProcessState,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="managerWxid != null">
        manager_wxid = #{managerWxid,jdbcType=VARCHAR},
      </if>
    </set>
    where reamrk_id = #{reamrkId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.smartGym.pojo.RemarkMessage">
    update remark_message
    set user_wxid = #{userWxid,jdbcType=VARCHAR},
      remark_message = #{remarkMessage,jdbcType=VARCHAR},
      feedback = #{feedback,jdbcType=VARCHAR},
      remark_process_state = #{remarkProcessState,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      manager_wxid = #{managerWxid,jdbcType=VARCHAR}
    where reamrk_id = #{reamrkId,jdbcType=BIGINT}
  </update>
</mapper>