<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartGym.mapper.EventMapper">
  <resultMap id="BaseResultMap" type="cn.smartGym.pojo.Event">
    <id column="event_id" jdbcType="VARCHAR" property="eventId" />
    <result column="competition_id" jdbcType="VARCHAR" property="competitionId" />
    <result column="competition_name" jdbcType="VARCHAR" property="competitionName" />
    <result column="category_id" jdbcType="VARCHAR" property="categoryId" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="event_name" jdbcType="VARCHAR" property="eventName" />
    <result column="event_level" jdbcType="INTEGER" property="eventLevel" />
    <result column="event_place" jdbcType="VARCHAR" property="eventPlace" />
    <result column="event_gender" jdbcType="INTEGER" property="eventGender" />
    <result column="event_type" jdbcType="INTEGER" property="eventType" />
    <result column="people_num" jdbcType="INTEGER" property="peopleNum" />
    <result column="rank_criterion" jdbcType="INTEGER" property="rankCriterion" />
    <result column="event_description" jdbcType="VARCHAR" property="eventDescription" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="judge_wxid" jdbcType="VARCHAR" property="judgeWxid" />
    <result column="competition_description" jdbcType="VARCHAR" property="competitionDescription" />
    <result column="category_description" jdbcType="VARCHAR" property="categoryDescription" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    event_id, competition_id, competition_name, category_id, category_name, event_name, 
    event_level, event_place, event_gender, event_type, people_num, rank_criterion, event_description, 
    status, judge_wxid, competition_description, category_description, created, updated
  </sql>
  <select id="selectByExample" parameterType="cn.smartGym.pojo.EventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from event
    where event_id = #{eventId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from event
    where event_id = #{eventId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.smartGym.pojo.EventExample">
    delete from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.smartGym.pojo.Event">
    insert into event (event_id, competition_id, competition_name, 
      category_id, category_name, event_name, 
      event_level, event_place, event_gender, 
      event_type, people_num, rank_criterion, 
      event_description, status, judge_wxid, 
      competition_description, category_description, 
      created, updated)
    values (#{eventId,jdbcType=VARCHAR}, #{competitionId,jdbcType=VARCHAR}, #{competitionName,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=VARCHAR}, #{categoryName,jdbcType=VARCHAR}, #{eventName,jdbcType=VARCHAR}, 
      #{eventLevel,jdbcType=INTEGER}, #{eventPlace,jdbcType=VARCHAR}, #{eventGender,jdbcType=INTEGER}, 
      #{eventType,jdbcType=INTEGER}, #{peopleNum,jdbcType=INTEGER}, #{rankCriterion,jdbcType=INTEGER}, 
      #{eventDescription,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{judgeWxid,jdbcType=VARCHAR}, 
      #{competitionDescription,jdbcType=VARCHAR}, #{categoryDescription,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.smartGym.pojo.Event">
    insert into event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eventId != null">
        event_id,
      </if>
      <if test="competitionId != null">
        competition_id,
      </if>
      <if test="competitionName != null">
        competition_name,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
      <if test="eventName != null">
        event_name,
      </if>
      <if test="eventLevel != null">
        event_level,
      </if>
      <if test="eventPlace != null">
        event_place,
      </if>
      <if test="eventGender != null">
        event_gender,
      </if>
      <if test="eventType != null">
        event_type,
      </if>
      <if test="peopleNum != null">
        people_num,
      </if>
      <if test="rankCriterion != null">
        rank_criterion,
      </if>
      <if test="eventDescription != null">
        event_description,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="judgeWxid != null">
        judge_wxid,
      </if>
      <if test="competitionDescription != null">
        competition_description,
      </if>
      <if test="categoryDescription != null">
        category_description,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eventId != null">
        #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="competitionId != null">
        #{competitionId,jdbcType=VARCHAR},
      </if>
      <if test="competitionName != null">
        #{competitionName,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventLevel != null">
        #{eventLevel,jdbcType=INTEGER},
      </if>
      <if test="eventPlace != null">
        #{eventPlace,jdbcType=VARCHAR},
      </if>
      <if test="eventGender != null">
        #{eventGender,jdbcType=INTEGER},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=INTEGER},
      </if>
      <if test="peopleNum != null">
        #{peopleNum,jdbcType=INTEGER},
      </if>
      <if test="rankCriterion != null">
        #{rankCriterion,jdbcType=INTEGER},
      </if>
      <if test="eventDescription != null">
        #{eventDescription,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="judgeWxid != null">
        #{judgeWxid,jdbcType=VARCHAR},
      </if>
      <if test="competitionDescription != null">
        #{competitionDescription,jdbcType=VARCHAR},
      </if>
      <if test="categoryDescription != null">
        #{categoryDescription,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.smartGym.pojo.EventExample" resultType="java.lang.Long">
    select count(*) from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update event
    <set>
      <if test="record.eventId != null">
        event_id = #{record.eventId,jdbcType=VARCHAR},
      </if>
      <if test="record.competitionId != null">
        competition_id = #{record.competitionId,jdbcType=VARCHAR},
      </if>
      <if test="record.competitionName != null">
        competition_name = #{record.competitionName,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryName != null">
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.eventName != null">
        event_name = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.eventLevel != null">
        event_level = #{record.eventLevel,jdbcType=INTEGER},
      </if>
      <if test="record.eventPlace != null">
        event_place = #{record.eventPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.eventGender != null">
        event_gender = #{record.eventGender,jdbcType=INTEGER},
      </if>
      <if test="record.eventType != null">
        event_type = #{record.eventType,jdbcType=INTEGER},
      </if>
      <if test="record.peopleNum != null">
        people_num = #{record.peopleNum,jdbcType=INTEGER},
      </if>
      <if test="record.rankCriterion != null">
        rank_criterion = #{record.rankCriterion,jdbcType=INTEGER},
      </if>
      <if test="record.eventDescription != null">
        event_description = #{record.eventDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.judgeWxid != null">
        judge_wxid = #{record.judgeWxid,jdbcType=VARCHAR},
      </if>
      <if test="record.competitionDescription != null">
        competition_description = #{record.competitionDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryDescription != null">
        category_description = #{record.categoryDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event
    set event_id = #{record.eventId,jdbcType=VARCHAR},
      competition_id = #{record.competitionId,jdbcType=VARCHAR},
      competition_name = #{record.competitionName,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=VARCHAR},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      event_level = #{record.eventLevel,jdbcType=INTEGER},
      event_place = #{record.eventPlace,jdbcType=VARCHAR},
      event_gender = #{record.eventGender,jdbcType=INTEGER},
      event_type = #{record.eventType,jdbcType=INTEGER},
      people_num = #{record.peopleNum,jdbcType=INTEGER},
      rank_criterion = #{record.rankCriterion,jdbcType=INTEGER},
      event_description = #{record.eventDescription,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      judge_wxid = #{record.judgeWxid,jdbcType=VARCHAR},
      competition_description = #{record.competitionDescription,jdbcType=VARCHAR},
      category_description = #{record.categoryDescription,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.smartGym.pojo.Event">
    update event
    <set>
      <if test="competitionId != null">
        competition_id = #{competitionId,jdbcType=VARCHAR},
      </if>
      <if test="competitionName != null">
        competition_name = #{competitionName,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="eventName != null">
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventLevel != null">
        event_level = #{eventLevel,jdbcType=INTEGER},
      </if>
      <if test="eventPlace != null">
        event_place = #{eventPlace,jdbcType=VARCHAR},
      </if>
      <if test="eventGender != null">
        event_gender = #{eventGender,jdbcType=INTEGER},
      </if>
      <if test="eventType != null">
        event_type = #{eventType,jdbcType=INTEGER},
      </if>
      <if test="peopleNum != null">
        people_num = #{peopleNum,jdbcType=INTEGER},
      </if>
      <if test="rankCriterion != null">
        rank_criterion = #{rankCriterion,jdbcType=INTEGER},
      </if>
      <if test="eventDescription != null">
        event_description = #{eventDescription,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="judgeWxid != null">
        judge_wxid = #{judgeWxid,jdbcType=VARCHAR},
      </if>
      <if test="competitionDescription != null">
        competition_description = #{competitionDescription,jdbcType=VARCHAR},
      </if>
      <if test="categoryDescription != null">
        category_description = #{categoryDescription,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where event_id = #{eventId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.smartGym.pojo.Event">
    update event
    set competition_id = #{competitionId,jdbcType=VARCHAR},
      competition_name = #{competitionName,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=VARCHAR},
      category_name = #{categoryName,jdbcType=VARCHAR},
      event_name = #{eventName,jdbcType=VARCHAR},
      event_level = #{eventLevel,jdbcType=INTEGER},
      event_place = #{eventPlace,jdbcType=VARCHAR},
      event_gender = #{eventGender,jdbcType=INTEGER},
      event_type = #{eventType,jdbcType=INTEGER},
      people_num = #{peopleNum,jdbcType=INTEGER},
      rank_criterion = #{rankCriterion,jdbcType=INTEGER},
      event_description = #{eventDescription,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      judge_wxid = #{judgeWxid,jdbcType=VARCHAR},
      competition_description = #{competitionDescription,jdbcType=VARCHAR},
      category_description = #{categoryDescription,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where event_id = #{eventId,jdbcType=VARCHAR}
  </update>
</mapper>